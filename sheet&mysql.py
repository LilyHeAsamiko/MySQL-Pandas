# -*- coding: utf-8 -*-
"""sheet&mysql.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z20WNry2MIytaw9V3T3vJG8YvBLxDi0v
"""

!pip install --upgrade gspread
from google.colab import drive
drive.mount('/content/gdrive')

from google.colab import auth
auth.authenticate_user()

!ls

import gspread 
#from oauth2client.client import GoogleCredentials
#gc = gspread.authorize(GoogleCredentials.get_application_default())
from google.auth import default
creds, _ = default()
gc = gspread.authorize(creds)

# workbranch = gc.create('/content/gdrive/MyDrive/weather')
# saved as 'content gdrive MyDrive weather.gsheet'
# path: /content/gdrive/MyDrive/ content gdrive MyDrive weather.gsheet
!cd /content/gdrive/MyDrive 
#already at MyDrive
workbranch = gc.create('weather')

worksheet = gc.open('weather').sheet1

"""Get table from website"""

!pip install --upgrade pandas
!pip install --upgrade beautifulsoup4
!pip install  --upgrade bs4
# Setup for getting table from website
import pandas as pd
import requests
import json
from bs4 import BeautifulSoup

URL = "http://www.weather.com.cn/textFC/hb.shtml"
res = requests.get(URL)
soup = BeautifulSoup(res.content, 'html.parser')
tables = soup.find_all('table')
#Test 0: table about 天津
table = tables[1] 
''' note that the tables
for 华北 hb.shtml are: 北京，天津，河北，山西，内蒙古
for 东北 db.shtml are: 黑龙江，吉林，辽宁
for 华东 hd.shtml are: 上海，安徽，江苏，山东，浙江，福建, 江西
for 华中 hz.shtml are: 湖北，湖南，河南
for 华南 hn.shtml are: 广西，广东，海南
for 西北 xb.shtml are: 陕西，甘肃，新疆，青海，宁夏
for 西南 xn.shtml are: 四川，重庆，贵州，云南，西藏
for 港澳台 gat.shtml are: 香港，澳门，台湾
'''
# Test 1: Print the first 1000 characters of the html table
print(str(table)[:1000])

from six.moves.http_client import LENGTH_REQUIRED
import numpy as np
#head
'''The page contains malformed HTML code, so use flavor="html5lib"(bs4) in pd.read_html to read it correctly: df = pd.read_html(str(table), header=1, flavor='html5lib')[0]
'''
print(np.shape(table))
print(type(table))
#Test 4: Clear the table, remove the last column
Table = np.array(table)
#Table.reshape(39,9)
print(np.shape(Table))
print(type(Table))
print(Table)

#df = pd.read_html(str(table), header=1, flavor='html5lib')[0]
df = pd.read_html(str(table), header=1, flavor='bs4')[0]

Header = df.head(0).to_string()
#Test 2: Print the header of the table and its info
print(Header)
print(len(Header))
print(np.shape(df.head()[:]))
print(type(df.head(0)))

w, h = np.shape(df.head(0))
#Test 3: Print the first 10 lists of the table
print(df.head(10).to_string())

from six.moves.http_client import LENGTH_REQUIRED
import numpy as np
'''regions_hb = ['北京'，'天津'，'河北'，'山西'，'内蒙古'];
print(size(regions_hb))
regions_db = ['黑龙江'，'吉林'，'辽宁'];
regions_hd = ['上海'，'安徽'，'江苏'，'山东'，'浙江'，'福建', '江西'];
regions_hz = ['湖北'，'湖南'，'河南'];
regions_hn = ['广西'，'广东'，'海南'];
regions_xb = ['陕西'，'甘肃'，'新疆'，'青海'，'宁夏'];
regions_xn = ['四川'，'重庆'，'贵州'，'云南'，'西藏'];
regions_gat = ['香港'，'澳门'，'台湾'];
'''
# Get all data from website
URLs = ["http://www.weather.com.cn/textFC/hb.shtml", "http://www.weather.com.cn/textFC/db.shtml", "http://www.weather.com.cn/textFC/hd.shtml", "http://www.weather.com.cn/textFC/hz.shtml", "http://www.weather.com.cn/textFC/hn.shtml", "http://www.weather.com.cn/textFC/xb.shtml", "http://www.weather.com.cn/textFC/xn.shtml", "http://www.weather.com.cn/textFC/gat.shtml"]
worksheetnm = ['weather_hb', 'weather_db', 'weather_hd', 'weather_hz', 'weather_hn', 'weather_xb', 'weather_xn', 'weather_gat']
for i in range(8):
  URL_ = URLs[i]
  res_ = requests.get(URL_)
  soup_ = BeautifulSoup(res_.content, 'html.parser')
  tables_ = soup_.find_all('table')
  #tbln_ = np.shape(tables_)
  if i == 0:
    tbln_ = 5;
  elif i == 1:
    tbln_ = 3;
  elif i == 2:
    tbln_ = 7;
  elif i == 3:
    tbln_ = 3;
  elif i == 4:
    tbln_ = 3;
  elif i == 5:
    tbln_ = 5;
  elif i == 6:
    tbln_ = 5;
  elif i == 7:
    tbln_ = 3;
  print(tbln_) 
  workbranch_ = gc.create('weather'+str(i))
  from google.colab import files
  from google.colab import data_table
  writer = pd.ExcelWriter('weather'+str(i)+'.xlsx')
  for j in range(tbln_):
    table_ = tables_[j] 
    df_ = pd.read_html(str(table_), header=1, flavor='bs4')[0]
    #worksheet_ = gc.open('weather'+str(i)).get_worksheet(j)
    #df_.to_csv('weather'+str(i)+'.csv', encoding = 'utf-8-sig')
    #https://www.zhangshengrong.com/p/noXQbAvG1G/
#    with pd.ExcelWriter('weather'+str(i)+'.xlsx') as writer:
    df_.to_excel(writer, sheet_name = 'sheet'+str(j), encoding = 'utf-8-sig')
#    df_.to_csv('weather'+str(i)+'.csv', sheet_name = 'sheet'+str(j), encoding = 'utf-8-sig')
  writer.save()
  files.download('weather'+str(i)+'.xlsx')
#  files.download('weather'+str(i)+'.csv')

'''!pip install --upgrade gspread
from google.colab import drive
drive.mount('/content/gdrive')
from google.colab import auth
auth.authenticate_user()
!cd /content/gdrive/MyDrive 
#already at MyDrive
workbranch = gc.create('weather')
worksheet = gc.open('weather').shee1
from google.colab import files
df.to_csv('weather.csv', encoding = 'utf-8-sig')
files.download('weather.csv') '''
'''


This is because gspread only implemented sheet1 to let you retrieve the first sheet in your spreadsheet as a shortcut.

From the source code you can see the implementation of sheet1 is using get_worksheet(0)

@property
def sheet1(self):
    """Shortcut property for getting the first worksheet."""
    return self.get_worksheet(0)

So if you want to retrieve other sheets, you need to use other methods like:

1.specify index as a integer indicating the position of the sheet to open starting from 0:

wks = gc.open("doc_name").get_worksheet(index)

or

2.specify title of the sheet to open as a string:

wks = gc.open("doc_name").worksheet(title)

That is to say, in you case, to get sheet2 you can probably use

wks = gc.open("doc_name").get_worksheet(1)

'''



import gspread 
#from oauth2client.client import GoogleCredentials
#gc = gspread.authorize(GoogleCredentials.get_application_default())
from google.auth import default
creds, _ = default()
gc = gspread.authorize(creds)

import gspread 
#from oauth2client.client import GoogleCredentials
#gc = gspread.authorize(GoogleCredentials.get_application_default())
from google.auth import default
creds, _ = default()
gc = gspread.authorize(creds)

"""98
（0,9）
# 省/直辖市  城市 天气现象 风向风力 最高气温 天气现象.1   风向风力.1  最低气温 Unnamed: 8
0    天津  天津    -  - -    -      晴   北风 <3级    -3         详情
1    天津  武清    -  - -    -      晴   北风 <3级    -6         详情
2    天津  宝坻    -  - -    -      晴  西北风 <3级    -7         详情
3    天津  东丽    -  - -    -      晴   北风 <3级    -5         详情
4    天津  西青    -  - -    -      晴   北风 <3级    -4         详情
5    天津  北辰    -  - -    -      晴   北风 <3级    -6         详情
6    天津  宁河    -  - -    -      晴   北风 <3级    -7         详情
7    天津  和平    -  - -    -      晴   北风 <3级    -3         详情
8    天津  静海    -  - -    -      晴   北风 <3级    -4         详情
9    天津  津南    -  - -    -      晴   北风 <3级    -4         详情

Save as csv on Google Drive
"""

path = '/content/gdrive/MyDrive/weather.csv'
df.to_csv(f)

"""Some with MYSQL"""

#@markdown Please fill in the value below with your GCP project ID and then run the cell.

# Please fill in these values.
project_id = "chaste" #@param {type:"string"}

# Quick input validations.
assert project_id, "⚠️ Please provide a Google Cloud project ID"

# Configure gcloud.
!gcloud config set project {project_id}

# grant Cloud SQL Client role to authenticated user
current_user = !gcloud auth list --filter=status:ACTIVE --format="value(account)"

!gcloud projects add-iam-policy-binding {project_id} \
  --member=user:{current_user[0]} \
  --role="roles/cloudsql.client"

# enable Cloud SQL Admin API
!gcloud services enable sqladmin.googleapis.com

#@markdown Please fill in the both the Google Cloud region and name for your Cloud SQL instance. Once filled in, run the cell.

# Please fill in these values.
region = "us-central1" #@param {type:"string"}
instance_name = "weather" #@param {type:"string"}

# Quick input validations.
assert region, "⚠️ Please provide a Google Cloud region"
assert instance_name, "⚠️ Please provide the name of your instance"

# check if Cloud SQL instance exists in the provided region
database_version = !gcloud sql instances describe {instance_name} --format="value(databaseVersion)"
if database_version[0].startswith("MYSQL"):
  print("Found existing MySQL Cloud SQL Instance!")
else:
  print("Creating new Cloud SQL instance...")
  password = input("Please provide a password to be used for database 'root' user: ")
  !gcloud sql instances create {instance_name} --database-version=MYSQL_8_0 \
    --region={region} --cpu=1 --memory=4GB --root-password={password} \
    --database-flags=cloudsql_iam_authentication=On

from google.colab import files
df.to_csv('weather.csv', encoding = 'utf-8-sig')
files.download('weather.csv')

"""Creating new Cloud SQL instance...
Please provide a password to be used for database 'root' user: 88866888
Created [https://sqladmin.googleapis.com/sql/v1beta4/projects/chaste/instances/weather].
NAME     DATABASE_VERSION  LOCATION       TIER              PRIMARY_ADDRESS  PRIVATE_ADDRESS  STATUS
weather  MYSQL_8_0         us-central1-c  db-custom-1-4096  34.71.151.146    -          *斜体文本*
"""

!gcloud sql databases create weathers --instance={instance_name}

"""Created database [weathers].
instance: weather
name: weathers
project: chaste
"""

!gcloud sql users create weather0 \
  --instance={instance_name} \
  --password="88866888"

# install dependencies
import sys
!{sys.executable} -m pip install cloud-sql-python-connector["pymysql"] SQLAlchemy

# initialize parameters
INSTANCE_CONNECTION_NAME = f"{project_id}:{region}:{instance_name}" # i.e demo-project:us-central1:demo-instance
print(f"Your instance connection name is: {INSTANCE_CONNECTION_NAME}")
DB_USER = "weather0"
DB_PASS = "88866888"
DB_NAME = "weathers"

from google.cloud.sql.connector import Connector
import sqlalchemy

# initialize Connector object
connector = Connector()

# function to return the database connection object
def getconn():
    conn = connector.connect(
        INSTANCE_CONNECTION_NAME,
        "pymysql",
        user=DB_USER,
        password=DB_PASS,
        db=DB_NAME
    )
    return conn

# create connection pool with 'creator' argument to our connection object function
pool = sqlalchemy.create_engine(
    "mysql+pymysql://",
    creator=getconn,
)

"""省/直辖市 城市 天气现象 风向风力 最高气温 天气现象.1 风向风力.1 最低气温 Unnamed: 8"""

'''method 1: downgrade sqlalchemy
df.to_sql('weathers', index=False, con=pool, if_exists='replace')
 !pip install --upgrade sqlalchemy < 2.0
#show tables
#Test 5: show weather table
sql1 = text("SELECT * FROM weathers;")
dftest = pd.read_sql_query(sql1, pool)
print(type(dftest))'''

df.to_sql('weathers', index=False, con=pool, if_exists='replace')
# Method2 : wrapper
# !pip install --upgrade sqlalchemy < 2.0
from sqlalchemy import text
with pool.begin() as dbpool_conn:
    query0 = text("""SELECT * FROM weathers""")
    dftest0 = pd.read_sql_query(query0, dbpool_conn)
    print(type(dftest0))
    print(dftest0)
    #Test: 读取城市为河东
    query1 = text("""SELECT * FROM weathers WHERE 城市 = 河东""")
    dftest1 = pd.read_sql_query(query1, dbpool_conn)
    print(type(dftest1))
    print(dftest1)  
    #Test: 读取天气现象为晴
    query2 = text("""SELECT * FROM weathers WHERE 天气现象 = 晴""")
    dftest2 = pd.read_sql_query(query2, dbpool_conn)
    print(type(dftest2)
    print(dftest2) 
    #Test: 读取最低气温为零下
    query2 = text("""SELECT * FROM weathers WHERE 最低气温 < 0 """)
    dftest2 = pd.read_sql_query(query2, dbpool_conn)
    print(type(dftest2)
    print(dftest2)

"""<class 'pandas.core.frame.DataFrame'>
   省/直辖市    城市 天气现象 风向风力 最高气温 天气现象.1   风向风力.1  最低气温 Unnamed: 8
0     天津    天津    -  - -    -     多云  西南风 <3级    -1         详情
1     天津    武清    -  - -    -     多云  西南风 <3级    -5         详情
2     天津    宝坻    -  - -    -     多云   南风 <3级    -7         详情
3     天津    东丽    -  - -    -     多云  西南风 <3级    -4         详情
4     天津    西青    -  - -    -     多云  西南风 <3级    -5         详情
5     天津    北辰    -  - -    -     多云  西南风 <3级    -7         详情
6     天津    宁河    -  - -    -     多云  西南风 <3级    -6         详情
7     天津    和平    -  - -    -     多云  西南风 <3级    -1         详情
8     天津    静海    -  - -    -     多云  西南风 <3级    -4         详情
9     天津    津南    -  - -    -     多云  西南风 <3级    -5         详情
10    天津  滨海新区    -  - -    -     多云  西南风 <3级    -3         详情
11    天津    河东    -  - -    -     多云  西南风 <3级    -1         详情
12    天津    河西    -  - -    -     多云  西南风 <3级    -1         详情
13    天津    蓟州    -  - -    -     多云   西风 <3级    -7         详情
14    天津    南开    -  - -    -     多云  西南风 <3级    -1         详情
15    天津    河北    -  - -    -     多云  西南风 <3级    -1         详情
16    天津    红桥    -  - -    -     多云  西南风 <3级    -1         详情

('天津', '天津', '-', '- -', '-', '多云', '西南风 <3级', -1, '详情')
('天津', '武清', '-', '- -', '-', '多云', '西南风 <3级', -5, '详情')
('天津', '宝坻', '-', '- -', '-', '多云', '南风 <3级', -7, '详情')
('天津', '东丽', '-', '- -', '-', '多云', '西南风 <3级', -4, '详情')
('天津', '西青', '-', '- -', '-', '多云', '西南风 <3级', -5, '详情')
('天津', '北辰', '-', '- -', '-', '多云', '西南风 <3级', -7, '详情')
('天津', '宁河', '-', '- -', '-', '多云', '西南风 <3级', -6, '详情')
('天津', '和平', '-', '- -', '-', '多云', '西南风 <3级', -1, '详情')
('天津', '静海', '-', '- -', '-', '多云', '西南风 <3级', -4, '详情')
('天津', '津南', '-', '- -', '-', '多云', '西南风 <3级', -5, '详情')
('天津', '滨海新区', '-', '- -', '-', '多云', '西南风 <3级', -3, '详情')
('天津', '河东', '-', '- -', '-', '多云', '西南风 <3级', -1, '详情')
('天津', '河西', '-', '- -', '-', '多云', '西南风 <3级', -1, '详情')
('天津', '蓟州', '-', '- -', '-', '多云', '西风 <3级', -7, '详情')
('天津', '南开', '-', '- -', '-', '多云', '西南风 <3级', -1, '详情')
('天津', '河北', '-', '- -', '-', '多云', '西南风 <3级', -1, '详情')
('天津', '红桥', '-', '- -', '-', '多云', '西南风 <3级', -1, '详情')

"""

#Method3 : wrapper & fetch
# connect to connection pool
with pool.connect() as db_conn:
#  # create the new table into sql
#  df.to_sql('weathers', pool, index = False, con=pool, if_exists='replace')
#
  # query and fetch weathers table
  results = db_conn.execute(text('''SELECT * FROM weathers''')).fetchall()
  #show results
  for row in results:
    print(row)

"""('天津', '天津', '-', '- -', '-', '多云', '西南风 <3级', -1, '详情')
('天津', '武清', '-', '- -', '-', '多云', '西南风 <3级', -5, '详情')
('天津', '宝坻', '-', '- -', '-', '多云', '南风 <3级', -7, '详情')
('天津', '东丽', '-', '- -', '-', '多云', '西南风 <3级', -4, '详情')
('天津', '西青', '-', '- -', '-', '多云', '西南风 <3级', -5, '详情')
('天津', '北辰', '-', '- -', '-', '多云', '西南风 <3级', -7, '详情')
('天津', '宁河', '-', '- -', '-', '多云', '西南风 <3级', -6, '详情')
('天津', '和平', '-', '- -', '-', '多云', '西南风 <3级', -1, '详情')
('天津', '静海', '-', '- -', '-', '多云', '西南风 <3级', -4, '详情')
('天津', '津南', '-', '- -', '-', '多云', '西南风 <3级', -5, '详情')
('天津', '滨海新区', '-', '- -', '-', '多云', '西南风 <3级', -3, '详情')
('天津', '河东', '-', '- -', '-', '多云', '西南风 <3级', -1, '详情')
('天津', '河西', '-', '- -', '-', '多云', '西南风 <3级', -1, '详情')
('天津', '蓟州', '-', '- -', '-', '多云', '西风 <3级', -7, '详情')
('天津', '南开', '-', '- -', '-', '多云', '西南风 <3级', -1, '详情')
('天津', '河北', '-', '- -', '-', '多云', '西南风 <3级', -1, '详情')
('天津', '红桥', '-', '- -', '-', '多云', '西南风 <3级', -1, '详情')


"""

'''# general create table and insert data
# connect to connection pool
with pool.connect() as db_conn:
  # create ratings table in our movies database
  db_conn.execute(
      "CREATE TABLE IF NOT EXISTS weathers "
      "( 省/直辖市 VARCHAR(255) NOT NULL, 城市 VARCHAR(255) NOT NULL, 天气现象 VARCHAR(255) NOT NULL, 风向风力 VARCHAR(255) NOT NULL, 最高气温 FLOAT NOT NULL, 天气现象.1 VARCHAR(255) NOT NULL, 风向风力.1 VARCHAR(255) NOT NULL, 最低气温 FLOAT NOT NULL"
      "PRIMARY KEY (省/直辖市));"
  )
  # insert data into our ratings table
  insert_stmt = sqlalchemy.text(
      "INSERT INTO ratings (省/直辖市, 城市, 天气现象, 风向风力, 最高气温, 天气现象.1, 风向风力.1, 最低气温) VALUES (:省/直辖市, :城市, :天气现象, :风向风力, :最高气温, :天气现象.1, :风向风力.1, :最低气温)",
  )

  # insert entries into table
  #db_conn.execute(insert_stmt, title="Batman Begins", genre="Action", rating=8.5)
  db_conn.execute(insert_stmt, title="Star Wars: Return of the Jedi", genre="Action", rating=9.1)
  db_conn.execute(insert_stmt, title="The Breakfast Club", genre="Drama", rating=8.3)

  # query and fetch ratings table
  results = db_conn.execute("SELECT * FROM ratings").fetchall()

  # show results
  for row in results:
    print(row)
'''

"""Save as csv (generally)"""

worksheet = gc.open('weather').sheet1



'''from abc import get_cache_token
import csv

# used the actual username, password and doc-id in the python script
username ="lilyheasamiko@gmail.com"
password ="MSc8059H5964QLY"
docid = '/content/gdrive/MyDrive/weather.sheet1'

#client = gspread.login(username, password)
spreadsheet = gc.open_by_key(docid)

for i, worksheet in enumerate(spreadsheet.worksheets()):
    filename = docid + '-worksheet' + str(i) + '.csv'
    with open(filename, 'w', newline='') as f:
        writer = csv.writer(f)
        writer.writerows(worksheet.get_all_values())
'''

worksheet.update_cells(cell_list)